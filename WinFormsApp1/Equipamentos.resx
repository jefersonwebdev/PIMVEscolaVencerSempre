<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bancoDadosHelperBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_excluir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5p9FMCfPcQAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>54</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACckYcxn5OHVZ+Th1Wfk4dVn5OHVZ+T
        h1WelYRNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACelYRNn5OHVZ+Th1Wfk4dVn5OHVZ+T
        h1WflIQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ6UhqOelIb/npSG/56U
        hv+elIb/npSG/52ThvcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ2ThveelIb/npSG/56U
        hv+elIb/npSG/52ThaIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB7cmmqe3Jp/3tyaf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB7cmn/e3Jp/3tyaaoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5aUcUOG0
        H6revh+q28khqrqyL+OurDP/rq4z/9bZIqrW2SKq1tkiqtbZI4kAAAAAAAAAAAAAAAAAAAAA46kdid+3
        H6rcwyGq2cwiqq+qM/+urTP/uLkv49bZIqrW2SKq1tkiqtXYI1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADnoB6q4rAf/9+7IP/cxiH/2s0i/9fTI//X1iP/1tkj/9bZI//W2SP/1tkj/wAAAAAAAAAAAAAAAAAA
        AADlph7/4bQf/96/IP/bySH/2c8i/9fVI//W1yP/1tkj/9bZI//W2SP/1tkiqgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOiaHKrkqh7/4LYg/97BIP/byiH/2c8i/9fUI//X1iP/1tgj/9bZI//W2SP/AAAAAAAA
        AAAAAAAAAAAAAOegHf/irx//37og/93EIf/azCL/2NEj/9fVI//W1yP/1tkj/9bZI//W2SKqAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA65QcquajHv/isB//37og/93EIf/byyL/2dAi/9fUI//X1iP/1tcj/9bX
        I/8AAAAAAAAAAAAAAAAAAAAA6Zkd/+WnHv/htB//3r4g/9zHIf/azCL/2NEj/9fVI//X1iP/1tcj/9bY
        IqoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADtixyq6Zsd/+WoHv/hsx//37wg/93EIf/byiH/2c4i/9jR
        I//X1CP/19Qj/wAAAAAAAAAAAAAAAAAAAADskhz/6J8d/+OsH//gtiD/3r8g/9zHIf/ayyL/2c8i/9jS
        I//X1CP/1tUiqgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPGBG6rskRz/6J4d/+SpHv/hsx//37sg/93C
        If/cyCH/28oi/9rNIv/ZziL/AAAAAAAAAAAAAAAAAAAAAO+HG//rlRz/56Ie/+OtH//gtiD/3r4g/93E
        If/bySH/2ssi/9rNIv/ZzSKqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9HUZqvCFG//rkxz/6J4d/+So
        Hv/isR//4Lgg/9+9IP/dwSH/3cUh/9zGIf8AAAAAAAAAAAAAAAAAAAAA83oa/+6KG//qlx3/56Ie/+Os
        H//htB//37og/96/IP/dwyH/3MUh/9zHIaoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD3Zxil9Hca//CF
        G//skhz/6Zwd/+akHv/jrB//4bIf/+C2IP/guSD/37of+QAAAAAAAAAAAAAAAAAAAAD2bBj58nwa/+6K
        G//rlRz/6J8d/+WnHv/jrh//4bMf/+C3IP/guSD/3rogpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9g
        Gh35aRhV83UbVfCBG1XThStvo35L7qWCSN7Wnihk5KgeVeSrHlXkrx46AAAAAAAAAAAAAAAAAAAAAPpg
        FTr2bBhV83sbVd2EJmSnfUfeo39L7s6TLW/kpR5V5KseVeSuHlXkryMdAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/b2cge3Fj2ntxZN17dGYjAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB7c2Ife3Fk2HxwY95/cWMkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB5bmMXfHFjz3xxY+Z8cWYtAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAfG9jKXxwZOJ7cWPUenFnGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/b18QfHBjw3xw
        Y+57cmU6AAAAAAAAAAAAAAAAAAAAAHpwYjR8cWTqe3FjyHhrXRMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN+/VyDcvlmd271Xqtm7
        VarWuVOsv6ZV5LmfVfvJrE7C07JJqtKyRqrHqEfAtZxP+rqfTebPrUWt0K9FqtCvRarPr0Sdz69HIAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4MNfnt/B
        Xf/ewFv/3L5Z/9u9V//au1T/2LlS/9e4UP/Vtk7/1LVM/9OzSf/Rskf/0LBF/9CwRf/QsEX/0LBF/9Cw
        Rf/Pr0SdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADixmOq4sRh/+DDX//fwV3/3r9b/9y+WP/bvFb/2btU/9i5Uv/XuFD/1bZN/9S0S//Ts0n/0bFH/9Cw
        Rf/QsEX/0LBF/9CvRaoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOXJZ6rkx2X/67BO/+mvTf/gwl//vV4b/7xbGf+8Wxn/vFsZ/7xbGf+8Wxn/vFsZ/7xb
        Gf+8Wxn/vFsZ/8N7Kv/QsEX/0K9FqgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA6MxsqufKav/nwmD/5cFf/+PFY//WpEz/1J9H/9SfRf/SnUT/0p1D/9Cb
        Qf/QmkD/z5k+/86YPf/Nlzv/z6JC/9KzSf/QsUaqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADrz3Cq6c1u/+jMbP/nymn/5chn/+THZf/jxWP/4cRh/+DC
        Xv/ewVz/3b9a/9y9WP/avFb/2bpT/9i5Uf/Wt0//1bVN/9O0SaoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO3Sc6rs0HL/7bxc/+u9W//oy2v/y4Q2/8mA
        M//JfzP/yH8y/8h+Mf/IfjD/x30w/8d9L//GfC7/xnwt/82SO//XuFH/1rdPqgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8NV4qu/Tdv/tvl//7L5e/+rO
        b//MhTj/yoE1/8qANP/JgDP/yX8y/8h/Mv/IfjH/x34w/8d9MP/HfS//zpQ9/9q7Vf/ZulKqAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADz2Hyq8dZ6//DU
        eP/u03b/7dF0/+zQcf/qzm//6c1t/+jLa//myWn/5chm/+PGZP/ixWL/4cNg/9/CXv/ewFv/3b5Z/9u9
        V6oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOSw
        S5LirUbG4atIxuCrRsbeqEXG3KhExtmmQsbYpELG16JBxtSgQcbTnz/G0J09xs+dPMbMmj3GzJk7xsqX
        OcbHljjGx5c7kgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA0HYAqs10Af/LcwL/yHEC/8ZvA//DbgP/wWwE/75rBP+8aQX/uWgG/7dmBv+0ZQf/smMH/69h
        CP+tYAj/ql4J/6hdCv+lWwqqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADQdgCDznQB/8tzAv/JcQL/xnAD/8RuA//BbQT/v2sE/7xpBf+6aAb/t2YG/7Vl
        B/+yYwf/sGII/61gCP+rXwn/qF0K/6ZaCYIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKpVAAPOcwBJzHIAVclyA1XGbwNVw28DVcNsA1XAbANVvWkGVbpp
        BlW3ZgZVtGYGVbRjBlWxYwlVrmAJVatgCVWnXgpJqlUAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////4D/Af+A/wH/4//H/gA8AH4APAB+ADwAfgA8AH4APAB+AD
        wAfgA8AH4APAB+ADwAf/D/D//4fh///Dw//+AAB//gAAf/4AAH/+AAB//gAAf/4AAH/+AAB//gAAf/4A
        AH/+AAB//gAAf/4AAH/+AAB///////////8=
</value>
  </data>
</root>