<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIZ8cYmGfXL/hn1y/4Z9cv+GfXL/hn1y/4Z9cv+GfXL/hn1y/4Z9cv+GfXL/hn1y/4Z9
        cv+GfHGJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAhXxyqoZ9cv+GfXL/hn1y/4Z9cv+GfXL/hn1y/4Z9cv+GfXL/hn1y/4Z9
        cv+GfXL/hn1y/4V8cqoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACFfHJQhXxyqoV8cqqFfHKqhXxx44Z9cv+GfXL/hn1y/4Z9
        cv+FfHHjhXxyqoV8cqqFfHKqhXxyUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4b2eqeG9n/3hv
        Z/94b2f/eG9n/3hvZ6oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAqqqqA6qimEiroplVqKKZVaifmVWon5ZVqJ+WVaWfllWln5ZVpZ+WVWtm
        YqFgW1bGYFtWxmBbVsZgW1bGa2VgoaKZkFWfmZBVn5mQVZ+ZkFWflpBVn5aQVZ+WkFWflpBVn5iNSKqq
        qgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACro5mDq6Oa/6qimf+qoZn/qaGY/6igmP+ooJf/p5+X/6af
        lv+mnpb/pZ2V/6Wdlf+knJT/o5yU/6Obk/+im5L/oZqS/6Gakf+gmZH/oJiQ/5+YkP+el4//npeP/56X
        j/+el4//npaOgQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKyjmqq/o3H/5aYe/+SqHv/irx//4bIf/+G1
        H//guCD/37sg/96+IP/ewCD/3cMh/9zGIf/cyCH/28kh/9vKIv/azCL/2s0i/9nOIv/ZzyL/2dAi/9jR
        I//Y0iP/2NIj/7Gra/+dl46qAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArKOaqsCicf/mox7/5ace/+Sr
        Hv/irx//4rIf/+G1H//guCD/37og/9+9IP/ewCD/3cIh/93EIf/cxyH/3Mgh/9vJIf/byiL/2swi/9rN
        Iv/azSL/2c4i/9nPIv/Z0CL/sapq/52XjqoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACspZyqwaFx/+if
        Hf/mox7/5ace/+SqHv/jrh//4rEf/+G0H//gtyD/4Lkg/9+8IP/eviD/3sEg/93DIf/dxSH/3Mch/9zI
        If/bySH/28oh/9vLIv/azCL/2swi/9rNIv+yqWr/nZeOqgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK6l
        nKrBn3L/6Zsd/+ifHf/moh7/5aYe/+SqHv/jrR//4rEf/+GzH//gtiD/4Lgg/9+7IP/fvSD/3r8g/97B
        IP/dwyH/3cUh/9zGIf/cxyH/3Mgh/9vJIf/byiH/28oh/7Opav+dl46qAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAArqadqsGfcf/qlx3/6Zod/+ieHf/noh7/5aUe/+SpHv/jrB//4rAf/+GyH//htR//4Lcg/+C5
        IP/fuyD/370g/96/IP/ewCD/3cIh/93DIf/dxSH/3MYh/9zHIf/cyCH/s6hr/52XjqoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACvpp2qw51y/+ySHP/qlh3/6Zod/+idHf/noR7/5qQe/+WoHv/kqx//464f/+Kx
        H//hsx//4bUf/+C3IP/guSD/37sg/9+8IP/eviD/3r8g/97AIP/dwiH/3cMh/93DIf+1pmv/n5eQqgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAK+mnarDnXL/7Y0c/+ySHP/rlRz/6Zkd/+icHf/noB3/5qMe/+Wm
        Hv/kqR7/46wf/+KvH//isR//4bMf/+G1H//gtiD/4Lgg/+C6IP/fuyD/37wg/9+9IP/eviD/3r8g/7Wm
        bP+fl5CqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAr6adqsWbcv/viBv/7Ywc/+yRHP/rlBz/6pgd/+mb
        Hf/onh3/56Ee/+akHv/lpx7/5Koe/+OsH//irx//4rEf/+GyH//htB//4bUf/+C3IP/guCD/4Lkg/9+6
        IP/fuiD/taRs/6CZkaoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACvpp+qxply//CCG//vhxv/7osc/+2P
        HP/rkxz/6pYc/+mZHf/onB3/6J8d/+eiHv/mpB7/5ace/+SpHv/jqx//460f/+KvH//isR//4bIf/+Gz
        H//htB//4bUf/+C2IP+2pGz/oJmRqgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALGon6rGl3L/8n0a//GB
        G//whRv/7okb/+2NHP/skRz/65Qc/+qXHf/pmh3/6Jwd/+efHf/noR7/5qQe/+WmHv/lqB7/5Koe/+Os
        H//jrR//4q8f/+KwH//isR//4rEf/7eia/+gmpGqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsaifqsiW
        c//0dxr/83sa//F/G//wgxv/74cb/+6LHP/tjxz/7JIc/+uVHP/qlx3/6Zod/+icHf/onh3/56Ad/+ai
        Hv/mpB7/5aYe/+WnHv/kqR7/5Koe/+SrH//jrB//uKFs/6KakaoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACyqaCqyJRy//ZxGv/0dRr/83ka//J9G//xgRv/8IUb/++IG//ujBz/7Y8c/+ySHP/rlBz/6pcd/+qZ
        Hf/pmx3/6J0d/+ieHf/noB3/56Ie/+ajHv/mpB7/5qUe/+WmHv+5n2z/opqTqgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALKpoKrKk3P/92sZ//ZvGf/1cxr/9Hca//N7Gv/yfhv/8YIb//CFG//viBv/7osc/+2O
        HP/skRz/65Mc/+uVHP/qlx3/6pkd/+maHf/pnB3/6J0d/+ieHf/nnx3/56Ad/7qebf+jmpOqAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAsqmgqsuRc//5ZRn/+GkZ//dtGf/2cRr/9XQa//R4Gv/zexr/8n4b//GC
        G//whRv/74cb/+6KG//tjRz/7Y8c/+yRHP/rkxz/65Uc/+qWHP/qlx3/6pgd/+mZHf/pmh3/u5xt/6Oc
        k6oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACyqaCqy5Fz//tgGP/6Yhj/+WYZ//hqGf/3bhn/9nEa//V1
        Gv/0eBr/83sa//J+G//xgRv/8IMb/++GG//viBv/7oob/+2MHP/tjhz/7JAc/+yRHP/skhz/65Mc/+uU
        HP+7m2z/o5yUqgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALKpoKrLkXP/+2AY//tgGP/7YBj/+mQY//ln
        Gf/3axn/924Z//ZxGv/1dBr/9Hca//N6Gv/yfBr/8X8b//GBG//wgxv/8IUb/++HG//viRv/7oob/+6L
        HP/tjRz/7Y0c/72YbP+jnZSqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAs6mhg7Oqof+zqqH/sqqh/7Kp
        oP+xqJ//saif/7Cnnv+vp57/r6ad/66mnf+tpZz/raSc/6ykm/+so5v/q6Oa/6qimv+qopn/qaGZ/6ig
        mP+ooJf/p5+X/6eflv+mnpb/pZ6V/6SclYIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACqqqoDsqugSbSr
        olW0q6JVsaifVbGon1WxqJ9VsaifVbGon1WuqJ9VrqWcVa6lnFWupZxVrqWcVaulnFWropxVq6KZVaui
        mVWroplVqKKZVaifmVWon5ZVqJ+WVaifllWnnZZJqqqqAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////////////+AAf//gAH//4AB///4H//gAAAH4AAAB+AA
        AAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AA
        AAfgAAAH4AAAB/////////////////////8=
</value>
  </data>
</root>